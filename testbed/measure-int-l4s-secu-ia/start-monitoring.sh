#!/bin/bash
date
set -x

SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
MMT_CONFIG_FILE="$SCRIPTPATH/mmt-probe.conf"

# attributes to collect. They must be in syntax: proto.att_name as being defined by MMT
ATTRIBUTES=$(cat <<EOF
   "meta.packet_len",
   "ip.src", 
   "ip.dst", 
   "ip.proto_tos", 
   "ip.ecn",
   "ip.identification", 
   "tcp.src_port", 
   "tcp.dest_port",
   "tcp.seq_nb",
   "tcp.ack_nb",
   "tcp.tsval",
   "tcp.tsecr",
   "int.hop_queue_ids",
   "int.hop_latencies", 
   "int.hop_queue_occups",
   "int.hop_ingress_times", 
   "int.hop_egress_times",
   "int.hop_l4s_mark", 
   "int.hop_l4s_drop",
   "int.hop_tx_utilizes"
EOF
)


# the "name" of the attributes above to show as CSV header.
# They can be any string as you want
ATTRIBUTES_HEADERS=$(cat <<EOF
   "meta.packet_len",
   "ip.src", 
   "ip.dst", 
   "ip.proto_tos", 
   "ip.ecn",
   "ip.identification", 
   "tcp.src_port", 
   "tcp.dest_port",
   "tcp.seq_nb",
   "tcp.ack_nb",
   "tcp.tsval",
   "tcp.tsecr",
   "int.queue_id",
   "int.latency", 
   "int.queue_occups",
   "int.ingress_time", 
   "int.egress_time",
   "int.nb_marked", 
   "int.nb_dropped",
   "int.mark_probability"
EOF
)



function generate-config(){
	cat <<EOF
# Generated by script on $(date)
event-report int {
   enable = true
   event  = "meta.packet_index"
   delta-cond = {}
   attributes = { $ATTRIBUTES }
   output-channel = {file}
}
EOF
}

function pcap-dump(){
	sudo tcpdump -i enp0s8 -w data.pcap
}

LOG_DIR="log"
mkdir -- $LOG_DIR

function monitor(){
	cd -- $LOG_DIR
	# generate config file
	cp -- "$MMT_CONFIG_FILE" ./mmt-probe.conf
	generate-config >> mmt-probe.conf

	# start pcap dumping
	echo "Start pcap dump"
	pcap-dump &
	TCPDUMP_PID=$!
	sleep 1

	echo "Start MMT"
	sudo mmt-probe -c ./mmt-probe.conf -i enp0s10

	sleep 5

	echo "Terminating.."
	killall tcpdump

	tar -czf pcap.tar.gz data.pcap
	sudo rm data.pcap

	echo "Processing output files ..."
	HEADER=$(echo "report-id,probe-id,source,timestamp,report-name,packet_index,$ATTRIBUTES_HEADERS" | tr -d '"' | tr -d "\n" | tr -d ' ')
	echo "$HEADER" > data.csv
	for f in $(find . -name '1*.csv'); do
		echo " $f"
		cat -- "$f" | grep "^1000," >> data.csv
		sudo rm -- "$f"
	done
	date
	#copy all config/cpu-monitor
	echo "Bye"
}

monitor
echo "byebye"

