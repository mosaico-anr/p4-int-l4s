#!/bin/bash
date
set -x

ATTRIBUTES=$(cat <<EOF
   "meta.proto_hierarchy", "meta.packet_len",
   "ip.src", "ip.dst", "ip.proto_tos", "ip.ecn",
   "ip.identification", "udp.src_port", "upd.dest_port", "upd.len",
   "int.num_hop", "int.hop_queue_ids",
   "int.hop_latencies", "int.hop_queue_occups",
   "int.hop_ingress_times", "int.hop_egress_times",
   "int.hop_l4s_mark", "int.hop_l4s_drop"
EOF
)


function generate-config(){
	cat <<EOF
# Generated by script on $(date)
event-report quic-l4s-int {
   enable = true
   event  = "meta.packet_index"
   delta-cond = {}
   attributes = { $ATTRIBUTES }
   output-channel = {file}
}
EOF
}

function pcap-dump(){
	sudo tcpdump -i enp0s8 -w data.pcap
}

LOG_DIR=$( date +%Y-%m-%d--%H-%M-%S )
mkdir -- $LOG_DIR


function ctrl_c(){
	echo "Terminating.."
	kill $TCPDUMP_PID
	sleep 1
	kill $MMT_PID

	tar -czf pcap.tar.gz data.pcap
	sudo rm data.pcap

	echo "Processing output files ..."
	HEADER=$(echo "report-id,probe-id,source,timestamp,index,$ATTRIBUTES" | tr -d '"' | tr -d "\n" | tr -d ' ')
	echo "$HEADER" > data.csv
	for f in $(find . -name '1*.csv'); do
		echo " $f"
		cat -- "$f" >> data.csv
		sudo rm -- "$f"
	done
	date
	echo "Bye"

}
trap ctrl_c INT TERM


cd -- $LOG_DIR

# generate config file
cp ../mmt-probe.conf .
generate-config >> mmt-probe.conf

# start pcap dumping
echo "Start pcap dump"
pcap-dump &
TCPDUMP_PID=$!
sleep 1

echo "Start MMT"
sudo mmt-probe -c ./mmt-probe.conf &
MMT_PID=$!

wait $MMT_PID

#) 2>&1 | tee -- $LOG_DIR/log.txt
